// prettier-ignore
// var noun2 = ["时间", "公司", "产品", "工作", "论坛", "企业", "问题", "市场", "系统", "技术", "现在", "作者", "网络", "文章", "方式", "电话", "时候", "什么", "开始", "生活", "联系", "积分", "主题", "中心", "世界", "价格", "用户", "个人", "地址", "情况", "设计", "活动", "手机", "大家", "文件", "图片", "经济", "功能", "环境", "日期", "专业", "人员", "教育", "资料", "状态", "社会", "名称", "音乐", "等级", "可能", "朋友", "资源", "精华", "电影", "新闻", "安全", "全国", "大学", "学生", "项目", "广告", "方法", "地方", "单位", "今天", "能力", "电脑", "记者", "位置", "这里", "标准", "女人", "设备", "之后", "学校", "组织", "作品", "东西", "方面", "简介", "科技", "其中", "工程", "经验", "地区", "结果", "影响", "行业", "表示", "程序", "规定", "男人", "数据", "商品", "大小", "关系", "文化", "城市", "基本", "类别", "责任", "业务", "部分", "中文", "根据", "威望", "语言", "社区", "品牌", "工具", "决定", "事情", "今年", "以后", "过程", "类型", "来源", "质量", "汽车", "一点", "历史", "次数", "孩子", "原因", "报告", "当前", "客户", "标题", "空间", "一切", "歌曲", "专家", "效果", "集团", "目标", "才能", "权限", "机构", "精神", "声音", "建议", "知识", "行为", "速度", "经过", "作用", "代表", "意见", "故事", "领导", "爱情", "自然", "模式", "平台", "人们", "级别", "编辑", "机会", "专辑", "小说", "身体", "小时", "水平", "比赛", "旅游", "左右", "过去", "基础", "老师", "条件", "会议", "建筑", "交易", "职业", "结构", "银行", "材料", "英语", "视频", "记录", "下面", "数量", "歌词", "眼睛", "办法", "资金", "科学", "电视", "当时", "家庭", "身上", "公告", "思想", "重点", "连接", "实际", "以前", "先生", "任务", "消息", "传真", "表现", "最近", "原创", "产业", "时代", "医院", "未来", "力量", "现金", "幸福", "错误", "现代", "商业", "邮件", "频道", "编号", "之前", "教师", "人才", "经典", "传统", "浙江", "里面", "对方", "范围", "生命", "照片", "需求", "女孩", "人生", "艺术", "商务", "文字", "名字", "魅力", "程度", "交通", "金钱", "歌手", "本地", "学院", "心情", "中央", "机械", "韩国", "代理", "时尚", "晚上", "观点", "形式", "特点", "贡献", "心中", "价值", "事件"];
// var weiyu1 = [""];
// // prettier-ignore
// var v1 = ["导致", "倒换", "捣乱",  "到达", "到会",  "道歉", "得到", "得知", "得罪", "登报", "登记", "等待", "大于", "等于", "低估", "抵偿", "抵达", "抵抗", "抵御", "抵制", "地震", "递送", "缔造", "颠倒",  "点破", "点燃", "点缀", "电贺", "惦挂", "惦记", "刁难", "雕刻", "调查", "调动", "调集", "调价", "调节", "调理", "调配", "调试", "调整", "跌倒", "叮嘱",  "订购", "订阅", "定货", "定居", "定义", "丢掉", "动手", "动摇", "动员", "洞察", "逗乐", "督促", "独创", "独占", "堵截", "妒忌", "杜绝", "度假", "端正", "断定",  "断言", "锻炼", "堆放", "对比", "对待", "对付", "对话", "对抗", "对照", "兑换", "夺取", "躲避", "遏制", "发表",  "发布", "发动", "发还", "发挥", "发觉", "发明", "发难", "发起", "发烧", "发射", "发生", "发送", "发现", "发泄", "发行", "发言", "发扬", "发展", "罚款", "翻修", "翻译", "翻印", "繁殖", "反对", "反抗", "反馈", "反省", "反问", "返航", "贩卖", "防备", "防范", "防洪", "防涝", "防守", "防御", "防止", "妨碍", "仿效", "仿造", "访问", "放弃", "放任", "放松", "放心", "放纵", "飞越", "诽谤", "废除", "分布", "分担", "分工", "分化",  "分解", "分开",  "分离", "龟裂", "分配", "分散", "分析", "吩咐", "粉碎", "奋斗", "丰收", "风行", "封闭", "封锁", "讽刺", "奉告", "奉劝", "奉献", "否定", "否认", "扶持", "服侍", "服务", "服用", "浮动", "浮现", "符合", "抚养", "俯视", "辅导", "辅助", "腐蚀", "付出", "负担", "负责", "附带", "附加", "复辟", "复核", "复习", "复印", "复制", "富余", "赋予", "改变", "改动", "改革", "改换", "改进", "改良", "改善", "改选", "改造", "改正", "改装", "概括", "干扰", "回避", "回答", "回顾", "回击", "回去", "回收", "回味", "回想", "回忆", "悔恨", "汇报", "会见", "会面", "会谈", "会晤", "会战", "绘图", "绘制", "贿赂", "毁灭", "昏迷", "混淆", "混杂", "活动", "活跃", "获得", "获取", "获准", "讥笑", "击毙", "击溃", "积累", "积攒", "激发", "激励", "急需", "集合", "集中", "嫉妒", "计划", "计较",  "记功", "记录", "记叙", "记载", "纪念", "忌讳", "继承", "寄存", "寄托", "加工", "加剧", "加强", "加入", "加以", "夹击", "驾驶", "架设", "假定", "假冒", "假设", "坚持", "坚守", "坚信", "歼灭", "兼并", "兼任", "监督", "监视", "减轻", "减少", "剪辑", "检查", "检举", "检索", "检讨", "检修", "检验", "见面", "建成", "建立", "建设", "建议", "践踏", "鉴别", "鉴定", "讲解", "讲究", "讲课", "讲授", "奖励", "降低", "降落", "交待", "交锋", "交换", "交流", "交纳", "交涉", "交往", "郊游", "矫正", "搅拌", "缴获", "叫喊", "叫嚷", "教导", "教训", "教育", "接触", "接待", "接见", "接近", "接洽", "接受", "接送", "揭发", "揭露", "节省", "节约", "劫持", "结合", "结交", "结束", "截获", "截击", "竭尽", "解除", "解放", "解决", "解剖", "解说", "解脱", "解析", "介入", "介绍", "戒严", "借口", "借用", "借助", "谨防", "进攻", "进来", "进去", "进入", "进行", "浸透", "禁止", "经过", "经受", "惊动", "惊叹", "精通", "警告", "警惕", "竞争", "敬佩", "敬献", "敬重", "纠缠", "纠正", "救济", "救援", "救助", "就业", "居留", "鞠躬", "举办", "举行", "拒绝", "具有", "惧怕", "捐赠", "捐助", "决定", "觉得", "觉悟", "军训", "开辟", "开采", "开除", "开导", "开发", "开赴", "开工", "开会", "开垦", "开阔", "开启", "开始", "开脱", "开学", "开展", "刊登", "刊载", "勘查", "看待", "看见", "看守", "看重", "抗衡", "抗拒", "抗议", "考察", "考核", "考虑", "考取", "考验", "靠近", "咳嗽", "可能", "可以", "渴望", "克服", "克制", "肯定", "恳求", "空谈", "恐吓", "控告", "控诉", "控制", "扣除", "扣押", "苦练", "酷爱", "夸奖", "跨过"];
// // console.log("noun1", noun1.length)
// // console.log("noun2", noun2.length)
// // console.log("adv1", adv1.length)
// // console.log("v1", v1.length);

// let map = {};
// v1.forEach((v, i) => {
//     if (map[v]) {
//         console.log(v, i);
//     } else {
//         map[v] = true;
//     }
// });

function put(data) {
    $("#output").text($("#output").text() + data);
}

function random(Min, Max) {
    var Range = Max - Min;
    var Rand = Math.random();
    return Min + Math.round(Rand * Range);
}
function randomSelect(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
}

function decodeText(raw) {
    let start = 0;
    let sentences = [];
    let output="";
    for (let i = 0; i < raw.length; i++) {
        if (raw[i].match(/[。，；！？]/)) {            
            sentences.push(raw.slice(start, i + 1));
            start=i+1;
        }
    }
    sentences.forEach((sentence) => {
        modes.forEach(mode => {
            if (mode.check(sentence)) {
                if(!mode.withPunctuation){
                    sentence=sentence.slice(0,sentence.length-1);
                }
                output += mode.decode(sentence);
            }
        });
    });
    return output;
}
function getRandomPunctuation() {
    return "，。；！？"[Math.floor(Math.random() * 5)];
}
function encodeText(raw) {
    let pos;
    let output = "";
    for (pos = 0; pos < raw.length; ) {
        const left = raw.length - pos;
        let availableModes = [];
        modes.forEach(mode => {
            if (left >= mode.min) {
                availableModes.push(mode);
            }
        });        
        const mode = randomSelect(availableModes);
        const { text, len } = mode.encode(raw.slice(pos));
        pos += len;
        output += text;
        if (!mode.withPunctuation) {
            output += getRandomPunctuation();
        }
    }
    return output;
}
function decode() {
    $("#output")
        .empty()
        .val(decodeText($("#input").val()));
}

function encode() {
    $("#output")
        .empty()
        .val(encodeText($("#input").val()));
}
